env LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketimeMT.so.1;
env FAKETIME_NO_CACHE=1;
env FAKETIME_TIMESTAMP_FILE=/faketime;

worker_processes 1;
error_log /dev/stderr;
events {
    worker_connections  1024;
}

http {
    log_format json_combined escape=json
    '{'
        '"timestamp": "$time_iso8601",'
        '"remote_addr": "$remote_addr",'
        '"request": "$request",'
        '"request_method": "$request_method",'
        '"request_uri": "$request_uri",'
        '"response_code": $status,'
        '"body_bytes_sent": $body_bytes_sent,'
        '"request_time": $request_time,'
        '"request_time_tmp": $request_time,'
        '"http_user_agent": "$http_user_agent",'
        '"level": "INFO"'
    '}';
    gzip on;

    lua_package_path '/lua/src/?.lua;;';

    lua_shared_dict restricted_uris 100m;
    lua_shared_dict last_access 100m;

    init_by_lua_file /lua/ngx/init.lua;
    init_worker_by_lua_file /lua/ngx/initWorker.lua;

    server {
        listen 8080;
        access_log /dev/stdout json_combined;

        location ~ /(.+) {
            set $request_path $1;
            access_by_lua_file /lua/ngx/rate-limit-access.lua;
            proxy_pass http://target:8080;
            body_filter_by_lua_file /lua/ngx/rate-limit-bodyfilter.lua;
        }
    }

    server {
        listen 8081;
        access_log /dev/stdout json_combined;

        location ~ /rate_limit/(P.+S)/(.+) {
            set $rate $1;
            set $configure_uri $2;
            content_by_lua_file /lua/ngx/setRate.lua;
        }
        location ~ /rate_limit(/.*)? {
            content_by_lua_file /lua/ngx/getRate.lua;
        }
        location ~ /last_access(/.*)? {
            content_by_lua_file /lua/ngx/getLastAccess.lua;
        }
    }
}
